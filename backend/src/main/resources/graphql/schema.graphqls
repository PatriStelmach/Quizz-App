enum Diff
{
    EASY
    MEDIUM
    HARD
    EXPERT
}
enum UserLevel
{
    NEWBIE
    NOOB
    CASUAL
    PRO
    MASTER
}
enum Role
{
    USER
    ADMIN
}
enum QuestionType
{
    SINGLE_CHOICE
    MULTIPLE_CHOICE
    OPEN
}

type UserConnection
{
    edges: [UserEdge!]
    pageInfo: PageInfo!
}

type UserEdge
{
    node: User!
    cursor: String!
}

type QuizEdge
{
    node: Quiz!
    cursor: String!
}

type QuizConnection
{
    edges: [QuizEdge!]
    pageInfo: PageInfo!
}

type PageInfo
{
    hasNextPage: Boolean!
    endCursor: String
}

type UserQuizScore {
    id: ID!
    user: User!
    quiz: Quiz!
    score: Int!
}

type User
{
    id: ID!
    username: String!
    roles: [Role!]!
    email: String
    avName: String
    avType: String
    avatar: String
    bio: String
    isActive: Boolean
    accountLocked: Boolean!
    enabled: Boolean!
    createdAt: String
    updatedAt: String
    birthDate: String
    userLevel: UserLevel
    streak: Int
    score: Int
    finishedAmount: Int
    quizzesCreated: [Quiz]
}

type Quiz
{
    id: ID!
    title: String!
    description: String
    category: String
    diff: Diff
    image: String
    author: User
    createdAt: String
    timeLimit: String
    maxPoints: Int
    questions: [Question]

}


type Question
{
    id: ID!
    diff: Diff
    questionType: QuestionType
    question: String!
    correctAnswer: String
    openAnswer: String
    answers: [String]
    quiz: Quiz!
}

type Query
{
    userById(id:ID): User
    users: [User!]!

    quizById(id:ID): Quiz
    quizzes: [Quiz!]!

    questionById(id:ID): Question
    questions: [Question!]!
}
